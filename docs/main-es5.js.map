{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comse/IO-fun/child-output/child-output.component.ts","webpack:///src/app/comse/IO-fun/child-output/child-output.component.html","webpack:///src/app/comse/IO-fun/child/child.component.ts","webpack:///src/app/comse/IO-fun/child/child.component.html","webpack:///src/app/comse/IO-fun/my-ngmodel/my-ngmodel.component.ts","webpack:///src/app/comse/IO-fun/my-ngmodel/my-ngmodel.component.html","webpack:///src/app/comse/IO-fun/parent/parent.component.ts","webpack:///src/app/comse/IO-fun/parent/parent.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","AppModule","declarations","imports","providers","bootstrap","ChildOutputComponent","myEvent","str","number","parseInt","emit","convertNumber","styleUrls","ChildComponent","params1","params2","name","MyNgmodelComponent","valueout","value","ParentComponent","int1val","int2val","int3val","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'inputoutput';\n}\n","<app-parent></app-parent>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ParentComponent } from './comse/IO-fun/parent/parent.component';\nimport { ChildComponent } from './comse/IO-fun/child/child.component';\nimport { ChildOutputComponent } from './comse/IO-fun/child-output/child-output.component';\nimport { MyNgmodelComponent } from './comse/IO-fun/my-ngmodel/my-ngmodel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ParentComponent,\n    ChildComponent,\n    ChildOutputComponent,\n    MyNgmodelComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-child-output',\n  templateUrl: './child-output.component.html',\n  styleUrls: ['./child-output.component.css']\n})\nexport class ChildOutputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  @Output() myEvent:EventEmitter<number> = new EventEmitter<number>() \n\n  convertNumber(str:string):void{\n    let number = parseInt(str)\n    this.myEvent.emit(number)\n  }\n}\n","<p>child-output works!</p>\n\n<input (input) =\"convertNumber($event.target.value)\">\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n})\nexport class ChildComponent implements OnInit {\n  constructor() {}\n\n  @Input() params1: string = '';\n  @Input() params2: string = '';\n\n  @Input() name: string = 'Asher';\n\n  ngOnInit(): void {}\n}\n","<p>child works!</p>\n\n<label>params1 :</label><span>{{params1}}</span><br>\n<label>params2 :</label><span>{{params2}}</span><br>\n\n<p>my name is {{name}}</p>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-my-ngmodel',\n  templateUrl: './my-ngmodel.component.html',\n  styleUrls: ['./my-ngmodel.component.css']\n})\nexport class MyNgmodelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input() valuein:string\n  @Output() valueout:EventEmitter<string> = new EventEmitter<string>()\n \n}\n","\n\n\n<input [value]= \"valuein\" (input) =\"valueout.emit($event.target.value)\"/>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html'\n})\nexport class ParentComponent implements OnInit {\n\n  constructor() { }\n\n  int1val:string=\"\"\n  int2val:string=\"\"\n  int3val:string=\"\"\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>parent works!</p>\n\n<input #inp1 (input)=\"int1val = inp1.value\" /><br />\n<input #inp2 (input)=\"int2val = inp2.value\" /><br />\n\n<!-- \n    <input #inp1 (input)=\"inp1.value\" >\n<input #inp2 (input)=\"inp2.value\" -->\n\n<app-child [params1]=\"int1val\" [params2]=\"int2val\"></app-child><br />\n\n<app-child name=\"int1val\"></app-child>\n\n<br><br><br>\n\n<h3>output</h3>\n<app-child-output (myEvent) = \"num.innerHTML = $event\"></app-child-output>\n<div #num></div>\n\n\n<h3>my ngmodel</h3>\n<input #inp3 [value]=\"int3val\" (input)=\"int3val = inp3.value\" /><br />\n\n<app-my-ngmodel [valuein] = int3val (valueout)= \"int3val = $event\" ></app-my-ngmodel>\n<!-- option 2\n<app-my-ngmodel [(valuein)] ></app-my-ngmodel> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}